% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constructor.R
\name{ucscZenaToObj}
\alias{ucscZenaToObj}
\title{Create omicscope Object from UCSC Xena Data}
\usage{
ucscZenaToObj(
  gtf_anno = NULL,
  counts_data = NULL,
  gtex_counts_data = NULL,
  pheno_data = NULL,
  survival_data = NULL
)
}
\arguments{
\item{gtf_anno}{Character string specifying the path to GTF annotation file
(e.g., "gencode.v36.annotation.gtf.gz"). If NULL, an empty GRanges object
will be used. The function will cache processed rowData as "rowData.rda"
to speed up subsequent runs.}

\item{counts_data}{Character string specifying the path to gene expression counts
file from TCGA (e.g., "TCGA-LUAD.star_counts.tsv.gz"). This parameter is
required and contains log2-transformed expression data that will be converted
back to raw counts using the formula: counts = 2^log2_counts - 1.}

\item{gtex_counts_data}{Character string specifying the path to GTEx expression
data file (e.g., "gene_reads_v10_lung.gct.gz"). If provided, GTEx normal
samples will be integrated with TCGA data. Default is NULL.}

\item{pheno_data}{Character string specifying the path to clinical/phenotype
data file (e.g., "TCGA-LUAD.clinical.tsv.gz"). This parameter is required
and contains sample metadata including clinical information.}

\item{survival_data}{Character string specifying the path to survival data file
(e.g., "TCGA-LUAD.survival.tsv.gz"). If NULL, only phenotype data will be used
for sample metadata. Default is NULL.}
}
\value{
An \code{omicscope} object containing:
\itemize{
\item \strong{assays}: Raw gene expression counts as a sparse matrix (dgCMatrix)
\item \strong{rowData}: Gene annotation including gene_id, gene_name, and gene_type
\item \strong{colData}: Sample metadata with group assignment, batch information,
and survival data (if provided)
\item \strong{gtfAnno}: GenomicRanges object with GTF annotations
\item \strong{gtfPath}: Path to the original GTF file
}
}
\description{
This function constructs an \code{omicscope} object by integrating multiple types of
genomic data downloaded from UCSC Xena, including gene expression counts, phenotype
data, survival data, and optionally GTEx normal tissue data. The function performs
data preprocessing, sample filtering, and creates a comprehensive SummarizedExperiment-based
object suitable for downstream omics analysis.
}
\details{
The function performs comprehensive data processing in several stages:

\subsection{GTF Annotation Processing}{
\itemize{
\item Imports GTF file and extracts gene_id, gene_name, and gene_type
\item Caches processed annotation as "rowData.rda" for efficiency
\item Filters annotation to match genes present in expression data
}
}

\subsection{Expression Data Processing}{
\itemize{
\item Reads TCGA expression data (assumes log2-transformed input)
\item Converts back to raw counts: \code{counts = 2^log2_counts - 1}
\item Ensures integer count values for downstream analysis
\item Filters genes to match available annotation
}
}

\subsection{Sample Classification}{
\itemize{
\item Extracts sample type from TCGA barcode (4th component, positions 1-2)
\item Classifies samples: id2 >= 10 → "normal", id2 < 10 → "tumor"
\item Assigns batch label "TCGA" to all TCGA samples
}
}

\subsection{GTEx Integration (Optional)}{
\itemize{
\item Reads GTEx expression data in GCT format
\item Identifies common genes between TCGA and GTEx datasets
\item Combines expression matrices and metadata
\item Assigns batch label "GTEX" and group label "normal" to GTEx samples
}
}
}
\note{
\itemize{
\item The function assumes TCGA expression data is log2-transformed
\item GTEx data file path is currently hardcoded as "gene_reads_v10_lung.gct.gz"
\item Row data caching improves performance for repeated runs with same GTF
\item All data alignment and filtering is performed automatically
}
}
\section{File Format Requirements}{

\describe{
\item{GTF file}{Standard GTF format with gene_id, gene_name, and gene_type attributes}
\item{Counts data}{Tab-separated file with genes as rows, samples as columns,
first column containing gene IDs}
\item{Phenotype data}{Tab-separated file with 'sample' column matching count
data column names}
\item{Survival data}{Tab-separated file with 'sample' column for joining
with phenotype data}
\item{GTEx data}{GCT format file (skip first 2 lines) with 'Name' column
for gene IDs}
}
}

\section{TCGA Sample Type Codes}{

TCGA sample barcodes follow the pattern: TCGA-XX-XXXX-XXX-XXX-XXXX-XX
The 4th component determines sample type:
\itemize{
\item 01-09: Primary solid tumors
\item 10-19: Normal tissues
\item 20-29: Control analytes
}
}

\examples{
\dontrun{
# Basic usage with TCGA data only
obj <- ucscZenaToObj(
  gtf_anno = "gencode.v36.annotation.gtf.gz",
  counts_data = "TCGA-LUAD.star_counts.tsv.gz",
  pheno_data = "TCGA-LUAD.clinical.tsv.gz"
)

# Include survival data
obj <- ucscZenaToObj(
  gtf_anno = "gencode.v36.annotation.gtf.gz",
  counts_data = "TCGA-LUAD.star_counts.tsv.gz",
  pheno_data = "TCGA-LUAD.clinical.tsv.gz",
  survival_data = "TCGA-LUAD.survival.tsv.gz"
)

# Full integration with GTEx data
obj <- ucscZenaToObj(
  gtf_anno = "gencode.v36.annotation.gtf.gz",
  counts_data = "TCGA-LUAD.star_counts.tsv.gz",
  pheno_data = "TCGA-LUAD.clinical.tsv.gz",
  survival_data = "TCGA-LUAD.survival.tsv.gz",
  gtex_counts_data = "gene_reads_v10_lung.gct.gz"
)

# Check the created object
dim(obj)
table(obj$group)
table(obj$batch)
}




}
