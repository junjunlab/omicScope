% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{tme_plot}
\alias{tme_plot}
\alias{tme_plot,omicscope-method}
\title{Plot Tumor Microenvironment (TME) Analysis Results}
\usage{
tme_plot(object, ...)

\S4method{tme_plot}{omicscope}(
  object,
  method = c("deconvo", "signature"),
  color_by = "group",
  fill_col = c("grey", "red"),
  type = c("box", "heatmap"),
  box_width = 0.75,
  error_bar_width = 0.25,
  add_point = FALSE,
  jitter.width = 0.3,
  point_col = "grey30",
  point_alpha = 0.8,
  complexHeatmap_params = list()
)
}
\arguments{
\item{object}{An \code{omicscope} object containing TME analysis results.}

\item{...}{Additional arguments (currently not used).}

\item{method}{Character string specifying the analysis method to visualize.
Options are:
\itemize{
\item \code{"deconvo"}: Deconvolution results (cell type proportions)
\item \code{"signature"}: Signature scoring results
}
Default is \code{"deconvo"}.}

\item{color_by}{Character string specifying the column name in colData
to use for grouping samples. Default is \code{"group"}.}

\item{fill_col}{Character vector of colors for filling boxplots or
annotation colors. Default is \code{c("grey", "red")}.}

\item{type}{Character string specifying the plot type. Options are:
\itemize{
\item \code{"box"}: Boxplot with optional jittered points
\item \code{"heatmap"}: Heatmap with hierarchical clustering
}
Default is \code{"box"}.}

\item{box_width}{Numeric value specifying the width of boxplots.
Default is \code{0.75}.}

\item{error_bar_width}{Numeric value specifying the width of error bars
in boxplots. Default is \code{0.25}.}

\item{add_point}{Logical indicating whether to add individual data points
to boxplots. Default is \code{FALSE}.}

\item{jitter.width}{Numeric value controlling the amount of horizontal
jitter for points. Default is \code{0.3}.}

\item{point_col}{Character string specifying the color of jittered points.
Default is \code{"grey30"}.}

\item{point_alpha}{Numeric value (0-1) specifying the transparency of
jittered points. Default is \code{0.8}.}

\item{complexHeatmap_params}{Named list of additional parameters to pass
to \code{ComplexHeatmap::Heatmap()}. Only used when \code{type = "heatmap"}.
Default is an empty list.}
}
\value{
For \code{type = "box"}: A \code{ggplot2} object showing boxplots of
cell type proportions or signature scores across groups with statistical
comparisons (Wilcoxon test).

For \code{type = "heatmap"}: A \code{ComplexHeatmap} object displaying
z-score normalized values with sample annotations.
}
\description{
Visualizes tumor microenvironment analysis results from deconvolution or
signature scoring methods. Supports both boxplot and heatmap visualizations
to display cell type proportions or signature scores across samples.
}
\details{
The function extracts TME analysis results from the \code{omicscope} object's
\code{tmeData} slot. For deconvolution results, it displays estimated cell
type proportions. For signature results, it shows signature scores.

When using boxplot visualization (\code{type = "box"}):
\itemize{
\item Statistical comparisons are performed using Wilcoxon test
\item P-values are displayed as significance symbols
\item Optional jittered points show individual sample values
}

When using heatmap visualization (\code{type = "heatmap"}):
\itemize{
\item Values are z-score normalized (scaled by column)
\item Samples are organized by the grouping variable
\item Cell types/signatures with zero values across all samples are removed
\item Column clustering is disabled by default
}
}
\examples{
\dontrun{
# Create example omicscope object (assuming you have the data)
# obj <- create_omicscope_object(...)

# Boxplot visualization of deconvolution results
tme_plot(obj,
         method = "deconvo",
         type = "box",
         color_by = "group",
         add_point = TRUE)

# Heatmap visualization of deconvolution results
tme_plot(obj,
         method = "deconvo",
         type = "heatmap",
         fill_col = c("blue", "red"))

# Signature scoring with custom heatmap parameters
tme_plot(obj,
         method = "signature",
         type = "heatmap",
         complexHeatmap_params = list(
           cluster_rows = TRUE,
           show_row_dend = TRUE
         ))
}



}
